version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/emailspam?retryWrites=true&w=majority
      - JWT_SECRET=yoursecretkey
      - ML_SERVICE_URL=http://ml-service:5001
      - NODE_ENV=production
    depends_on:
      mongo:
        condition: service_healthy
      ml-service:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/api/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 20s

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  ml-service:
    build: ./ml-model
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    volumes:
      - ./ml-model:/usr/src/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl","-f" ," http://localhost:5001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=emailspam
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 8s
      retries: 5
      start_period: 40s
    restart: unless-stopped

volumes:
  mongodb_data: